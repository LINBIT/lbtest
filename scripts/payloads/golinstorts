#!/bin/bash

ARGS=$(echo $1 | tr ":" "\n")

for o in $ARGS; do
	case "$o" in
		leader) leader="true" ;;
		tests=*) export $o ;;
		undertest=*) export $o ;;
		env=*) export $o ;;
	esac
done

[ -z $leader ] && { echo "Waiting for the leader... bye"; exit 0; }

controller=$(echo "$undertest" | cut -f1 -d',')
logdir=/var/log/linstor
mkdir -p "$logdir"
e2elogs="$logdir/e2e-test-logs"

gen_toml() {
	local f=$1
	cat <<EOF > "${f}.tmp"
ResourceDefinitionCreateLimit = 5

[ClientConf]
  Endpoint = "http://$controller:3370"
  LogLevel = "debug"
  LogFile = "$e2elogs"
EOF

	for n in $(echo "$undertest" | tr "," "\n"); do
	nip=$(grep "$n" /etc/hosts | cut -f1 -d' ')
		cat <<EOF >> "${f}.tmp"
[[Nodes]]
  Name = "$n"
  Type = "Combined"

  [[Nodes.NetInterfaces]]
    Name = "default"
    Address = "$nip"
    SatellitePort = 3366
    SatelliteEncryptionType = "plain"

[[StoragePools]]
  StoragePoolName = "scratch"
  NodeName = "$n"
  ProviderKind = "LVM_THIN"
  [StoragePools.Props]
    "StorDriver/LvmVg" = "scratch"
    "StorDriver/ThinPool" = "thin"
EOF
	done

	mv "${f}.tmp" "${f}"
}

SECONDS=0
echo "Pinging nodes under test"
while : ; do
	PING_SUCC="yes"
	for n in $(echo "$undertest" | tr "," "\n"); do
		echo "SSH pinging $n at $(date)"
		ssh -o ServerAliveInterval=5 -o ServerAliveCountMax=0 -o ConnectTimeout=1 \
			-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$n" true || { PING_SUCC="no"; break; }
	done

	[ $PING_SUCC = "yes" ] && break
	[ $SECONDS -lt 90 ] || { echo "Giving up ssh pinging after $SECONDS"; exit 1; }

	sleep 1
done
echo "Ping was successful"

echo "Connection to controller REST-API"
SECONDS=0
while : ; do
	curl -s "http://${controller}:3370/v1/nodes" && break
	[ $SECONDS -lt 90 ] || { echo "Giving up curl pinging after $SECONDS"; exit 1; }
	sleep 1
done
echo "Connect to REST-API was successful"


RET=0
cd /golinstor-tests || exit 1
e2efile=golinstor-e2e.toml
gen_toml "/tmp/$e2efile"
scp "/tmp/$e2efile" "root@${controller}:/golinstor-tests/"
cat "/tmp/$e2efile"

for t in $(echo "$tests" | tr "," "\n"); do
	ssh "root@$controller" "cd /golinstor-tests && ./${t}" -ginkgo.noColor -ginkgo.failFast > "${logdir}/${t}.log"
	rt=$?
	cat "${logdir}/${t}.log"

	[ $rt = 0 ] && echo "Test $t: SUCCESS" || echo "Test $t: FAILED"
	[ $RET = 0 ] && RET=$rt
	sync
done
scp "root@${controller}:${e2elogs}" "${logdir}" && cat "${e2elogs}"

echo "golinstorts returning: $RET"
exit $RET
